heat_template_version: 2013-05-23

description: >
  HOT template to create a stack that instantiates the currently selected scenario

parameters:
  image:
    type: string
    default: precise
    description: The image to use for all nodes
  key_name:
    type: string
    default: test2
    description: The key name to use for all nodes
  ci_network:
    type: string
    description: The shared build network to use

resources:
  # Deployment network
  build-server_ci:
    type: OS::Neutron::Port
    properties:
      network_id: ci

  control-server_ci:
    type: OS::Neutron::Port
    properties:
      network_id: ci

  compute-server02_ci:
    type: OS::Neutron::Port
    properties:
      network_id: ci

  # Internal network
  internal_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: internal_network_name }

  internal_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id { get_resource: internal_net }
      cidr: 10.0.1.0/24
      gateway_ip: null

  # External network
  external_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: external_network_name }

  external_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id { get_resource: external_net }
      cidr: 10.0.2.0/24
      gateway_ip: null

  build-server:
    type: OS::Nova::Server
    properties:
      name: build-server
      image: { get_param: image}
      flavor: m1.medium
      key_name: { get_param: key_name}
      networks:
       - port: { get_resource: build-server_ci}
      user_data:
        str_replace:
          template: |
            '{{ data.build-server_user_data }}'
          params:
            '{{ data.build-server_node_params}}'
            
  control-server:
    type: OS::Nova::Server
    properties:
      name: control-server
      image: { get_param: image}
      flavor: m1.medium
      key_name: { get_param: key_name}
      networks:
       - port: { get_resource: control-server_ci}
       - network: internal_net
       - network: external_net
      metadata: { wait_for: 'build-server' }
      user_data:
        str_replace:
          template: |
            '{{ data.control-server_user_data }}'
          params:
            '{{ data.control-server_node_params}}'

  compute-server02:
    type: OS::Nova::Server
    properties:
      name: compute-server02
      image: { get_param: image}
      flavor: m1.medium 
      key_name: { get_param: key_name}
      networks:
       - port: { get_resource: compute-server-1_ci}
       - network: internal_net
      metadata: { wait_for: 'build-server control-server' }
      user_data:
        str_replace:
          template: |
            '{{ data.compute-server02_user_data }}'
          params:
            '{{ data.compute-server02_node_params }}'
